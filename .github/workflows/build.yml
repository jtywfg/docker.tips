name: WFG-docker-image build and push
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
     # - name: Build and push
     #   id: docker_build
     #   uses: docker/build-push-action@v2
     #   with:
      #    push: true
     #     platforms: linux/amd64,linux/arm64
     #     tags: wwffggle/dockertips:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }} # 服务器ip
        username: ${{ secrets.HOST_USERNAME }} # 服务器登录用户名
        password: ${{ secrets.HOST_PASSWORD }} # 服务器登录密码
        port: ${{ secrets.HOST_PORT }} # 服务器ssh端口
        script: |
          # 切换工作区
          cd /docker
          docker container stop web
          # 下载 docker-compose.yml
          #wget -O docker-compose.yml https://raw.githubusercontent.com/yiyungent/SimCaptcha/master/docker-compose.yml
          # 停止并删除旧容器、网络、挂载点
          #docker-compose down                          # TODO: docker-compose: command not found. 不知道为什么找不到 docker-compose，但直接连接服务器执行就可以
          #/usr/local/python3/bin/docker-compose down
          # 删除旧镜像
          #docker rmi wwffggle/dockertips 
          # 登录镜像服务器
          docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} 
          # 创建并启动容器
          #docker-compose up -d --build
          #/usr/local/python3/bin/docker-compose up -d --build
          docker image pull wwffggle/dockertips:latest
          docker container run --rm -d -p 80:80 --name web wwffggle/dockertips:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: deploy to aws
  #       run: |
  #         cd ansible/
  #         pip install ansible
  #         echo ${{ secrets.ANSIBLE_VAULT }} > vault_pass.txt
  #         export ANSIBLE_VAULT_PASSWORD_FILE=vault_pass.txt
  #         ansible-vault decrypt aws.pem
  #         ansible-playbook -i hosts deploy.yml
